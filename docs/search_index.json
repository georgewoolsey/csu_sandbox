[["index.html", "Sandbox Section 1 Caution", " Sandbox George Woolsey 2023-04-21 Section 1 Caution This is a sandbox. Do not trust or re-use anything on here because it is a sandbox. "],["objective.html", "Section 2 Objective", " Section 2 Objective A complex web of regulations and other constraints limit the extent and intensity of forest treatment application (Van Deusen et al., 2012; North et al., 2015; Lydersen et al., 2019). Physical-environment, socioeconomic, and regulatory factors alone or in combination affect what type of treatment is practical or allowed in different areas. The objective of this study is to spatially identify the treatable area and the constraints on management activities in western USFS managed forests and the 21 priority landscapes outlined in the USFS Wildfire Crisis Strategy. Specific questions asked in this analysis are: i) What is the spatial extent on which management is constrained? ii) Which constraining factor(s) — physical-environment, socioeconomic, regulatory — is most limiting to forest management? "],["data-sources.html", "Section 3 Data Sources", " Section 3 Data Sources The data utilized for this analysis was generated in Google Earth Engine using this script. This program outputs 1) a data table of features - USDA Forest Service (USFS) managed forests - with user-defined constraints to forest managment and the reduction in treatable forested area based on those constraints, and 2) a shapefile of the spatial arrangement of treatable and constrained forested area within the boundary of each feature. The data products used in this study include: The National Land Cover Database (NLCD) was used to define forested area based on 2019 classification at 30m. The PAD-US product was used to identify protected areas that are dedicated to the preservation of biological diversity and to other natural, recreation and cultural uses, managed for these purposes through legal or other effective means. The USGS 3DEP Seamless National Map (10m) was used to determine slope. The USFWS Threatened &amp; Endangered Species Active Critical Habitat Report was used to determin the proposed and final critical habitat for species listed as Threatened and Endangered by the FWS, or that are jointly managed by FWS/NMFS. The National Hydrography Dataset (NHD) was used to define the United States water drainage network made up of stream features and waterbody polygons. Road and Trail networks were determined utilizing: The United States Census Bureau TIGER dataset (2016 release) The USFS FACTS database products: Motor Vehicle Use Map: Roads; Motor Vehicle Use Map: Trails; National Forest System Roads; National Forest System Trails "],["treatable-area-scenario.html", "Section 4 Treatable Area Scenario", " Section 4 Treatable Area Scenario Constraint levels from least flexible to most flexible in interpretation and implementation: Forested - forested area based on NLCD (2019) classification at 30m Protected - GAP Status 1 and inventoried roadless areas (IRA) Slope &gt; 35% - based on DEM at 10m Administrative - USFWS sensitive species habitat and GAP Status 2 Riparian Buffer - buffer of 100 ft. on streams and waterbodies based on NHD water network Distance from Road &gt; 2000ft - based on road and trail data layers Preliminary example here "],["usfs-national-forests.html", "Section 5 USFS National Forests 5.1 Load forest-level data 5.2 Reduction Treatable Area Table 5.3 Remaining Treatable by Forest 5.4 Remaining Treatable by Region 5.5 Reduction by Constraint by Forest 5.6 Reduction by Constraint by Region 5.7 Treatable Area Reduction by Constraint 5.8 Map of Treatable/Constrained 5.9 USFS National Forests Subwatershed Level", " Section 5 USFS National Forests Analysis limited to forests in the western US managed by the United States Department of Agriculture, Forest Service (USFS). Regions 1, 2, 3, 4, 5, and 6 Figure 5.1: USFS Region Map 5.1 Load forest-level data Data created via this Google Earth Engine script # data table # read multiple files constrained_wide_byftr &lt;- list.files(&quot;../data/&quot;)[grep(&quot;forestmgmtconstraint_statistics&quot;,list.files(&quot;../data/&quot;))] |&gt; purrr::map(function(x){readr::read_csv(paste0(&quot;../data/&quot;,x))}) |&gt; dplyr::bind_rows() |&gt; dplyr::rename_with(tolower) |&gt; dplyr::rename_with(make.names) |&gt; dplyr::rename(feature_id = system.index) |&gt; dplyr::mutate( forest_shortname = commonname |&gt; stringr::str_replace_all(c(&quot;National Forests&quot;=&quot;&quot;, &quot;National Forest&quot;=&quot;&quot;)) |&gt; trimws() , region = paste0(&quot;Region &quot;,as.numeric(region)) ) |&gt; dplyr::mutate(across( tidyselect::ends_with(&quot;_m2&quot;) , ~ as.numeric(.x) / 10000 )) |&gt; dplyr::rename_with( ~ gsub(&quot;_m2&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_m2&quot;) ) # aggregate data to region/forest level constrained_wide &lt;- constrained_wide_byftr |&gt; dplyr::group_by(region,adminfores,commonname,forest_shortname) |&gt; dplyr::summarise( dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , list(sum = ~ sum(.x, na.rm=T)) ) ) |&gt; dplyr::rename_with( ~ gsub(&quot;_ha_sum&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_ha_sum&quot;) ) |&gt; dplyr::ungroup() |&gt; dplyr::mutate(across( tidyselect::ends_with(&quot;_ha&quot;) &amp; tidyselect::starts_with(&quot;rmn&quot;) , ~ .x/covertype_area_ha , .names = &quot;pct_{.col}&quot; )) |&gt; dplyr::rename_with( ~ gsub(&quot;_area_ha&quot;, &quot;&quot;, .x) , tidyselect::starts_with(&quot;pct_&quot;) ) |&gt; # calculate pct reduction dplyr::mutate( pct_rdctn1_protected = -1*(1 - pct_rmn1_protected) , pct_rdctn2_slope = -1*(pct_rmn1_protected - pct_rmn2_slope) , pct_rdctn3_administrative = -1*(pct_rmn2_slope - pct_rmn3_administrative) , pct_rdctn4_riparian = -1*(pct_rmn3_administrative - pct_rmn4_riparian) , pct_rdctn5_roads = -1*(pct_rmn4_riparian - pct_rmn5_roads) , pct_rdctn_total = -1*(1 - pct_rmn5_roads) ) 5.2 Reduction Treatable Area Table tbl_temp &lt;- constrained_wide |&gt; dplyr::mutate(across( tidyselect::ends_with(&quot;_ha&quot;) , ~ scales::comma(.x, accuracy = 1) )) |&gt; dplyr::mutate(across( tidyselect::starts_with(&quot;pct_&quot;) , ~ scales::percent(.x, accuracy = 0.1) )) |&gt; dplyr::select( region , forest_shortname , covertype_area_ha , pct_rdctn1_protected , pct_rdctn2_slope , pct_rdctn3_administrative , pct_rdctn4_riparian , pct_rdctn5_roads , rmn5_roads_area_ha , pct_rmn5_roads ) |&gt; dplyr::arrange(region,forest_shortname) # make table kableExtra::kable( tbl_temp |&gt; dplyr::select(-c(region)) , caption = &quot;Forested area of each National Forest&lt;br&gt;percent reduction of different types of constraints on mechanical treatment&quot; , col.names = c( &quot;&quot; , &quot;Forested (ha)&quot; , &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; , &quot;Remaining (ha)&quot; , &quot;Remaining (%)&quot; ) ) |&gt; add_header_above(c(&quot; &quot; = 1, &quot;Constraint\\nLeast Flexible to Most Flexible&quot; = 6, &quot; &quot; = 2)) |&gt; kable_classic(&quot;striped&quot;, full_width=T) |&gt; pack_rows(index = table(forcats::fct_inorder(tbl_temp$region))) |&gt; kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) |&gt; kableExtra::scroll_box(width = &quot;740px&quot;) Table 5.1: Forested area of each National Forestpercent reduction of different types of constraints on mechanical treatment ConstraintLeast Flexible to Most Flexible Forested (ha) Protected Slope&gt;35% Administrative Riparian Buffer (100ft) Roads&gt;2000ft Remaining (ha) Remaining (%) Region 1 Beaverhead-Deerlodge 989,564 -55.4% -13.3% -0.1% -4.2% -4.8% 219,558 22.2% Bitterroot 377,482 -66.2% -18.6% -0.1% -2.7% -1.1% 42,665 11.3% Custer Gallatin 690,360 -59.3% -14.0% -7.4% -2.7% -2.6% 97,140 14.1% Flathead 761,672 -55.9% -12.6% -20.8% -1.6% -0.5% 65,317 8.6% Helena-Lewis and Clark 873,025 -59.9% -13.6% -4.8% -2.8% -2.8% 140,859 16.1% Idaho Panhandle 1,014,337 -30.0% -38.2% -1.0% -4.5% -2.0% 245,192 24.2% Kootenai 869,390 -28.4% -25.1% -21.2% -3.9% -0.6% 180,741 20.8% Lolo 750,939 -31.9% -38.8% -6.8% -3.8% -1.4% 130,547 17.4% Nez Perce-Clearwater 1,253,760 -60.8% -17.9% -0.2% -1.9% -1.6% 221,564 17.7% Region 2 Arapaho and Roosevelt 490,035 -38.4% -18.6% -1.6% -9.0% -3.5% 141,820 28.9% Bighorn 273,401 -72.6% -3.0% -0.1% -4.3% -1.5% 50,560 18.5% Black Hills 469,954 -2.3% -17.5% -1.4% -8.7% -3.0% 315,133 67.1% Grand Mesa, Uncompahgre and Gunnison 905,439 -44.8% -12.6% -2.8% -7.5% -7.0% 230,184 25.4% Medicine Bow-Routt 695,735 -43.4% -7.3% -0.1% -11.4% -5.4% 225,702 32.4% Nebraska 15,308 -0.6% -23.4% -4.8% -28.5% -10.0% 5,008 32.7% Pike and San Isabel 606,832 -50.2% -14.5% -3.4% -10.5% -3.0% 111,844 18.4% Rio Grande 444,083 -47.6% -15.0% 0.0% -6.9% -5.8% 109,534 24.7% Samuel R. McKelvie 3,796 0.0% -1.6% 0.0% -0.7% -21.1% 2,909 76.6% San Juan 583,727 -45.2% -13.6% -0.1% -9.0% -4.2% 162,902 27.9% Shoshone 411,240 -81.3% -4.0% -8.7% -1.9% -0.6% 14,684 3.6% White River 643,886 -56.6% -15.0% -0.1% -6.0% -4.0% 118,467 18.4% Region 3 Apache-Sitgreaves 484,680 -16.1% -13.2% -40.6% -6.5% -2.0% 104,753 21.6% Carson 415,775 -13.8% -20.6% -1.5% -12.7% -7.5% 182,257 43.8% Cibola 489,739 -19.0% -13.8% -17.1% -13.7% -8.9% 134,648 27.5% Coconino 449,419 -10.3% -5.6% -32.0% -5.7% -5.4% 184,239 41.0% Coronado 198,395 -59.5% -19.9% -14.6% -2.3% -0.6% 6,340 3.2% Gila 941,114 -47.5% -11.8% -10.4% -4.7% -4.7% 196,602 20.9% Kaibab 357,467 -7.4% -5.8% -26.0% -10.3% -6.9% 156,041 43.7% Lincoln 279,885 -18.6% -21.4% -22.2% -12.2% -3.6% 61,520 22.0% Prescott 184,098 -19.4% -21.4% -8.1% -11.6% -10.7% 52,788 28.7% Santa Fe 464,524 -31.6% -17.5% -7.5% -12.5% -2.3% 132,617 28.5% Tonto 263,671 -17.4% -25.1% -16.8% -9.7% -13.0% 47,550 18.0% Region 4 Ashley 326,112 -82.2% -1.8% -0.1% -1.6% -1.2% 43,036 13.2% Boise 418,057 -39.3% -32.6% -0.8% -0.8% -1.4% 105,013 25.1% Bridger-Teton 665,529 -77.3% -6.0% -16.1% -0.1% 0.0% 3,031 0.5% Caribou-Targhee 688,844 -57.3% -7.8% -0.2% -3.4% -4.0% 187,542 27.2% Dixie 461,644 -39.3% -13.9% -0.3% -5.9% -5.5% 162,017 35.1% Fishlake 476,434 -55.5% -15.4% -0.1% -3.9% -2.9% 105,694 22.2% Humboldt-Toiyabe 1,084,334 -74.2% -9.8% -2.7% -2.3% -2.5% 91,274 8.4% Manti-La Sal 375,492 -43.9% -18.8% -6.2% -4.6% -3.1% 87,959 23.4% Payette 478,142 -62.5% -14.4% -0.3% -1.3% -1.1% 97,184 20.3% Salmon-Challis 741,363 -78.9% -11.7% -0.7% -1.1% -0.5% 52,273 7.1% Sawtooth 319,853 -75.3% -12.1% 0.0% -1.0% -1.1% 33,860 10.6% Uinta-Wasatch-Cache 768,259 -55.0% -15.9% -0.5% -3.6% -4.0% 160,918 20.9% Region 5 Angeles 52,051 -53.3% -36.4% -0.1% -1.6% -0.7% 4,095 7.9% Cleveland 26,273 -34.9% -29.0% -4.7% -4.4% -3.8% 6,091 23.2% Eldorado 208,533 -16.1% -24.8% -4.8% -17.9% -1.1% 73,624 35.3% Inyo 200,655 -77.5% -4.9% -0.7% -2.4% -1.1% 26,859 13.4% Klamath 416,504 -28.2% -34.3% -10.6% -3.2% -1.5% 92,838 22.3% Lake Tahoe Basin Management Unit 52,601 -30.4% -20.8% -0.6% -16.6% -1.4% 15,904 30.2% Lassen 410,242 -14.0% -9.8% -1.7% -6.3% -3.6% 265,708 64.8% Los Padres 185,969 -70.2% -20.1% -3.1% -1.5% -0.9% 7,923 4.3% Mendocino 189,814 -32.9% -40.5% -12.6% -4.6% -0.7% 16,638 8.8% Modoc 311,622 -12.9% -8.1% -2.5% -8.6% -5.0% 196,475 63.0% Plumas 400,600 -6.5% -35.1% -3.9% -21.3% -2.0% 124,578 31.1% San Bernardino 88,735 -36.7% -34.8% -2.7% -3.8% -1.5% 18,130 20.4% Sequoia 193,620 -41.6% -24.0% -18.3% -2.6% -1.0% 24,370 12.6% Shasta-Trinity 728,876 -27.3% -32.8% -10.0% -6.1% -2.0% 158,846 21.8% Sierra 330,309 -41.3% -17.5% -18.4% -12.7% -0.5% 31,884 9.7% Six Rivers 382,446 -28.8% -47.6% -17.8% -1.9% -0.4% 13,376 3.5% Stanislaus 253,728 -20.0% -24.0% -2.4% -23.7% -0.6% 74,440 29.3% Tahoe 348,900 -14.1% -31.6% -7.9% -14.7% -1.3% 106,028 30.4% Region 6 Columbia River Gorge National Scenic Area 44,419 -17.7% -33.2% -11.2% -11.1% -1.8% 11,147 25.1% Colville 548,336 -18.1% -25.6% -1.4% -12.9% -3.3% 211,726 38.6% Deschutes 489,787 -18.7% -3.8% -16.5% -2.7% -1.7% 277,108 56.6% Fremont-Winema 779,305 -10.0% -5.2% -4.6% -6.4% -1.2% 566,359 72.7% Gifford Pinchot 512,930 -26.4% -34.5% -28.5% -3.2% -0.2% 36,626 7.1% Malheur 493,231 -11.9% -14.3% -0.4% -8.8% -0.8% 315,194 63.9% Mt. Baker-Snoqualmie 671,040 -55.7% -27.5% -11.3% -2.0% -0.2% 22,311 3.3% Mt. Hood 379,559 -28.5% -19.4% -28.5% -4.6% -0.9% 68,385 18.0% Ochoco 204,246 -11.2% -12.9% -0.8% -14.9% -3.1% 116,866 57.2% Okanogan-Wenatchee 845,813 -60.2% -20.4% -13.0% -1.6% -0.3% 38,325 4.5% Olympic 249,837 -25.0% -50.4% -18.5% -1.9% -0.3% 9,808 3.9% Rogue River-Siskiyou 499,408 -28.3% -32.9% -26.8% -2.2% -0.6% 46,138 9.2% Siuslaw 290,412 -7.7% -56.5% -24.6% -4.3% -0.3% 19,423 6.7% Umatilla 444,191 -37.3% -14.0% -0.2% -10.3% -0.6% 167,130 37.6% Umpqua 362,723 -16.9% -35.3% -26.2% -5.8% -1.3% 52,943 14.6% Wallowa-Whitman 652,791 -37.0% -18.3% -1.7% -9.0% -0.4% 218,979 33.5% Willamette 643,641 -28.5% -35.1% -15.6% -5.6% -0.3% 96,633 15.0% 5.3 Remaining Treatable by Forest ggplot(data = constrained_wide, mapping = aes(x = pct_rmn5_roads, y = reorder(forest_shortname, -pct_rmn5_roads), fill = region)) + geom_col(color = NA, width = 0.7) + geom_text( mapping = aes(label = scales::percent(pct_rmn5_roads, accuracy = 1)) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + facet_grid(rows = vars(region), scales = &quot;free_y&quot;, switch = &quot;y&quot;) + scale_fill_viridis_d(option = &quot;cividis&quot;,alpha = 0.8) + scale_x_continuous(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Treatable Forested Area Remaining (%)&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; # c(0.9, 0.9) , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) # , strip.background = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , strip.placement = &quot;outside&quot; ) 5.4 Remaining Treatable by Region # rmn rgn ggplot(constrained_wide , aes( y = region , x = pct_rmn5_roads) ) + geom_violin(aes(fill = region)) + geom_boxplot(width = 0.15) + geom_point(size = 0.8, color = &quot;gray23&quot;, alpha = 0.7) + scale_fill_viridis_d(option = &quot;cividis&quot;) + scale_x_continuous(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Treatable Forested Area Remaining (%)&quot; ) + theme_light() + theme(legend.position = &quot;none&quot;) 5.5 Reduction by Constraint by Forest # reshape constrained_pct_rdctn_long &lt;- constrained_wide |&gt; dplyr::select(region, forest_shortname, tidyselect::starts_with(&quot;pct_rdctn&quot;)) |&gt; tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;pct_rdctn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;pct_rdctn&quot; , names_prefix = &quot;pct_rdctn&quot; , values_drop_na = F ) |&gt; tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) |&gt; dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , constraint = factor( constraint , ordered = TRUE , levels = c( &quot;protected&quot; , &quot;slope&quot; , &quot;administrative&quot; , &quot;riparian&quot; , &quot;roads&quot; , &quot;total&quot; ) , labels = c( &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; , &quot;Total&quot; ) ) |&gt; forcats::fct_rev() ) |&gt; dplyr::left_join( constrained_wide |&gt; dplyr::select(region,forest_shortname,pct_rdctn_total) , by = join_by(region,forest_shortname) ) # plot ggplot() + geom_col( data = constrained_pct_rdctn_long |&gt; dplyr::filter(constraint!=&quot;Total&quot;) , mapping = aes(y = reorder(forest_shortname,-pct_rdctn_total), x = pct_rdctn, fill = constraint) , color = NA, width = 0.7 ) + geom_text( data = constrained_pct_rdctn_long |&gt; dplyr::filter(constraint==&quot;Total&quot;) , mapping = aes( y = reorder(forest_shortname,-pct_rdctn_total), x = pct_rdctn_total , label = scales::percent(pct_rdctn_total, accuracy = 1) ) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + facet_grid(rows = vars(region), scales = &quot;free_y&quot;, switch = &quot;y&quot;) + scale_fill_viridis_d(option = &quot;plasma&quot;, alpha = 0.8) + scale_x_reverse(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Forested Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , strip.placement = &quot;outside&quot; ) 5.6 Reduction by Constraint by Region Mean reduction by constraint at region level rgn_dta_temp &lt;- constrained_pct_rdctn_long |&gt; dplyr::group_by(region, constraint) |&gt; dplyr::summarise(pct_rdctn = mean(pct_rdctn, na.rm=T)) ggplot() + geom_col( data = rgn_dta_temp |&gt; dplyr::filter(constraint!=&quot;Total&quot;) , mapping = aes(y = region, x = pct_rdctn, fill = constraint) , color = NA, width = 0.7 ) + geom_text( data = rgn_dta_temp |&gt; dplyr::filter(constraint==&quot;Total&quot;) , mapping = aes( y = region, x = pct_rdctn , label = scales::percent(pct_rdctn, accuracy = 1) ) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + scale_fill_viridis_d(option = &quot;plasma&quot;, alpha = 0.8) + scale_x_reverse(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Mean Constraint Reduction in Treatable Forested Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) 5.7 Treatable Area Reduction by Constraint # reshape constrained_pct_rmn_long &lt;- constrained_wide |&gt; dplyr::mutate(pct_rmn_forested=1) |&gt; dplyr::select(region, forest_shortname, tidyselect::starts_with(&quot;pct_rmn&quot;)) |&gt; tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;pct_rmn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;pct_rmn&quot; , names_prefix = &quot;pct_rmn&quot; , values_drop_na = F ) |&gt; tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) |&gt; dplyr::mutate( constraint = factor( constraint , ordered = TRUE , levels = c( &quot;forested&quot; , &quot;protected&quot; , &quot;slope&quot; , &quot;administrative&quot; , &quot;riparian&quot; , &quot;roads&quot; ) , labels = c( &quot;Forested&quot; , &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; ) ) ) |&gt; dplyr::arrange(region, forest_shortname, constraint) # plot plt_lines_fn &lt;- function(rgn) { ( ggplot(data = constrained_pct_rmn_long |&gt; dplyr::filter(region==rgn) , mapping = aes(x = constraint, y = pct_rmn, group = forest_shortname) ) + geom_line(mapping=aes(color = forest_shortname), linewidth = 1.5) + geom_label( mapping=aes(label = scales::percent(pct_rmn, scale = 100, accuracy = 1)) , color = &quot;black&quot; , size = 3 , label.padding = unit(0.15, &quot;lines&quot;) ) + scale_color_viridis_d(option = &quot;turbo&quot;, alpha = 0.8) + scale_y_continuous(labels = scales::percent_format()) + scale_x_discrete(labels = scales::label_wrap(10)) + labs( x = &quot;Constraint\\nLeast Flexible \\U2192 Most Flexible&quot; , y = &quot;Forested Area Remaining&quot; , title = rgn ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_blank() , legend.text = element_text(size = 7) , plot.title = element_text(face = &quot;bold&quot;) ) + guides( color = guide_legend(nrow=3,byrow=TRUE,override.aes=list(size = 5)) ) ) } constrained_pct_rmn_long |&gt; dplyr::pull(region) |&gt; unique() |&gt; purrr::map(plt_lines_fn) 5.8 Map of Treatable/Constrained Load spatial data flist_temp &lt;- list.files(&quot;../data/&quot;,pattern = &quot;\\\\.shp$&quot;)[ grep(&quot;forestmgmtconstraint_vectors&quot;,list.files(&quot;../data/&quot;,pattern = &quot;\\\\.shp$&quot;)) ] # spatial constrained_spatial &lt;- flist_temp[1] |&gt; purrr::map(function(x){sf::read_sf(paste0(&quot;../data/&quot;,x))}) |&gt; dplyr::bind_rows() |&gt; dplyr::left_join( constrained_wide_byftr |&gt; dplyr::select(feature_id,region,adminfores,commonname,forest_shortname,feature_area_ha) , by = join_by(feature_id) ) |&gt; dplyr::mutate( IsTreatable = factor( istreatabl , ordered = TRUE , levels = c(0,1) , labels = c(&quot;Constrained&quot;, &quot;Treatable&quot;) ) ) |&gt; dplyr::rename(Forest=commonname) |&gt; dplyr::arrange(feature_area_ha) Example for one National Forest # filter shapes # filter areas_temp &lt;- constrained_spatial |&gt; sf::st_drop_geometry() |&gt; dplyr::pull(feature_area_ha) |&gt; unique() |&gt; sort() constrained_spatial_temp &lt;- constrained_spatial |&gt; dplyr::arrange(feature_area_ha) |&gt; dplyr::filter(feature_area_ha==areas_temp[1]) |&gt; # min(2,length(areas_temp)) dplyr::group_by(region,adminfores,Forest,forest_shortname,IsTreatable) |&gt; dplyr::summarise( geometry = sf::st_union(geometry) ) |&gt; dplyr::ungroup() # basemap option mapview::mapviewOptions(homebutton = FALSE, basemaps = c(&quot;Esri.WorldImagery&quot;)) # map mapview::mapview( constrained_spatial_temp , zcol = &quot;IsTreatable&quot; , col.regions = viridis::turbo(n=2,direction = -1) , alpha.regions = 0.6 , lwd = 0 , label = FALSE , legend = FALSE , layer.name = &quot;Treatable-Constrained&quot; , popup = leafpop::popupTable( constrained_spatial_temp , zcol = c( &quot;Forest&quot; , &quot;IsTreatable&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) 5.9 USFS National Forests Subwatershed Level Sixth-level hydrologic units (HUs) enumerated with 12-digit codes, commonly referred to as subwatersheds, were used to characterize the spatial arrangement of constrained land. Subwatershed boundaries have been used to represent meaningful landscape management units and to approximate “firesheds” which are contiguous areas with similar fire history and problem fire characteristics where a coordinated suppression planning occurs. Subwatersheds that did not have at least 25% of area within the boundary of the area of interest were excluded from this analysis. This cutoff was implemented under the assumption that with less than 25% of area available, treatment alone would not substantially affect wildfire behavior across the subwatershed. 5.9.1 Load subwatershed-level data Data created via this Google Earth Engine script # data table # read multiple files constrained_byftr_huc12_wide &lt;- list.files(&quot;../data/usfs_subwatersheds/&quot;,pattern = &quot;\\\\.csv$&quot;) |&gt; purrr::map(function(x){ readr::read_csv( paste0(&quot;../data/usfs_subwatersheds/&quot;,x) , name_repair = &quot;universal&quot; , col_types = cols(.default = &quot;c&quot;) ) }) |&gt; dplyr::bind_rows() |&gt; dplyr::select(-dplyr::starts_with(&quot;shape&quot;, ignore.case = T)) |&gt; dplyr::rename_with(tolower) |&gt; dplyr::rename_with(make.names) |&gt; dplyr::rename(feature_id = system.index) |&gt; dplyr::mutate( forest_shortname = commonname |&gt; stringr::str_replace_all(c(&quot;National Forests&quot;=&quot;&quot;, &quot;National Forest&quot;=&quot;&quot;)) |&gt; trimws() , region = paste0(&quot;Region &quot;,as.numeric(region)) , dplyr::across( tidyselect::ends_with(&quot;_m2&quot;) , ~ as.numeric(.x) / 10000 ) , dplyr::across( tidyselect::starts_with(&quot;pct_rmn&quot;) , ~ as.numeric(.x) ) ) |&gt; dplyr::rename_with( ~ gsub(&quot;_m2&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_m2&quot;) ) |&gt; # calculate pct reduction dplyr::mutate( pct_rdctn1_protected = -1*(1 - pct_rmn1_protected) , pct_rdctn2_slope = -1*(pct_rmn1_protected - pct_rmn2_slope) , pct_rdctn3_administrative = -1*(pct_rmn2_slope - pct_rmn3_administrative) , pct_rdctn4_riparian = -1*(pct_rmn3_administrative - pct_rmn4_riparian) , pct_rdctn5_roads = -1*(pct_rmn4_riparian - pct_rmn5_roads) , pct_rdctn_total = -1*(1 - pct_rmn5_roads) , cnstrnt_class = dplyr::case_when( -pct_rdctn_total &gt;= 0.85 ~ 1 , -pct_rdctn_total &gt;= 0.65 ~ 2 , -pct_rdctn_total &gt;= 0.0 ~ 3 ) ) |&gt; dplyr::mutate( cnstrnt_class = factor( cnstrnt_class , levels = 1:3 , labels = c(&quot;high constraint&quot;, &quot;med. constraint&quot;, &quot;low constraint&quot;) , ordered = T ) |&gt; forcats::fct_rev() ) 5.9.2 Distribution of Subwatershed Area ggplot( data = constrained_byftr_huc12_wide , mapping = aes(x = huc12_area_ha) ) + geom_vline(xintercept = median(constrained_byftr_huc12_wide$huc12_area_ha), linetype=&quot;dashed&quot;, color=&quot;gray66&quot;) + geom_histogram( aes(y = after_stat(density)) , bins = 16 , fill = &quot;navy&quot; , alpha = 0.8 , color = &quot;gray25&quot; ) + geom_density( aes(y = after_stat(density)) , linetype = &quot;dashed&quot; , lwd = 1 , color = &quot;gray21&quot; ) + scale_x_continuous(labels = scales::comma, breaks = scales::extended_breaks(n=7)) + labs( y = &quot;Density&quot; , x = &quot;Subwatershed Area (ha)&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.title = element_text(size=9) , axis.text = element_text(size=7) ) 5.9.3 Distribution of Subwatershed Constraint Based on model simulations of how much area generally needs to be treated to influence wildfire behavior, we binned the subwatersheds into three classes of mechanical constraint: high (85–100% [i.e., only 0–15% is available for mechanical treatment]): fuels treatment would principally need to rely on fire medium (65– 84%): could use a combination of fire and mechanical thinning low (65%): could effectively influence wildfire behavior with mechanical treatment alone constrained_byftr_huc12_wide |&gt; dplyr::count(region,forest_shortname,cnstrnt_class) |&gt; dplyr::group_by(region,forest_shortname) |&gt; dplyr::mutate( pct = n/sum(n) , high_pct=max(ifelse(cnstrnt_class==&quot;high constraint&quot;,pct,0)) ) |&gt; ggplot( mapping = aes(x = pct, y = reorder(forest_shortname, high_pct), fill=cnstrnt_class) ) + geom_col(width = 0.7, alpha=0.8) + geom_text( mapping = aes( label = scales::percent(pct, accuracy = 1) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + facet_grid(rows = vars(region), scales = &quot;free_y&quot;, switch = &quot;y&quot;) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;Constraint Class&quot; , y = &quot;&quot; , x = &quot;Percent of Subwatersheds&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; # c(0.9, 0.9) , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) # , strip.background = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , strip.placement = &quot;outside&quot; ) "],["wildfire-crisis-strategy-priority-landscapes.html", "Section 6 Wildfire Crisis Strategy Priority Landscapes 6.1 Map of Priority Landscapes 6.2 Load landscape-level data 6.3 Reduction Treatable Area Table 6.4 Forested Area Plot 6.5 Remaining Treatable Forest Plot 6.6 Reduction by Constraint Plot 6.7 Reduction Treatable Area Plot 6.8 Wildfire Crisis Strategy Priority Landscapes Subwatershed Level 6.9 Example code to split larger polygons", " Section 6 Wildfire Crisis Strategy Priority Landscapes The USFS recently launched a Wildfire Crisis Strategy plan to substantially increase the scale of forest health and risk reduction fuel treatments over the next decade. The plan prioritizes treatments on 21 landscapes in eight states in the western US targeting federal, state, tribal, and private lands where wildfire ignitions will potentially impact communities. Figure 6.1: Wildfire Crisis Strategy Priority Landscapes 6.1 Map of Priority Landscapes # load data wf_landscapes &lt;- sf::read_sf(&quot;../data/Wildfire_Crisis_Strategy_Landscapes/Wildfire_Crisis_Strategy_Landscapes_(Feature_Layer).shp&quot;) |&gt; dplyr::rename_with(tolower) |&gt; sf::st_make_valid() wf_landscapes &lt;- wf_landscapes |&gt; dplyr::mutate( hectares = (as.numeric(sf::st_area(geometry))/10000) , Mil.Hectares = hectares |&gt; scales::comma(suffix = &quot; M&quot;, scale = 1e-6, accuracy = .01) , acres = (as.numeric(sf::st_area(geometry))/4046.85642) , Mil.Acres = acres |&gt; scales::comma(suffix = &quot; M&quot;, scale = 1e-6, accuracy = .01) ) mapview::mapviewOptions(homebutton = FALSE, basemaps = c(&quot;OpenStreetMap&quot;)) # map mapview::mapview( wf_landscapes , zcol = &quot;state&quot; , col.regions = viridis::viridis(n = wf_landscapes$state |&gt; unique() |&gt; length()) , alpha.regions = 0.6 , lwd = 0 , label = FALSE , legend = FALSE , layer.name = &quot;WF Priority LS&quot; , popup = leafpop::popupTable( wf_landscapes , zcol = c( &quot;state&quot; , &quot;name&quot; , &quot;Mil.Hectares&quot; , &quot;Mil.Acres&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) 6.2 Load landscape-level data Data created via this Google Earth Engine script # data table # read multiple files constrained_wide_byftr &lt;- list.files(&quot;../data/wildfirepriority/&quot;)[grep(&quot;wildfirepriority_statistics&quot;,list.files(&quot;../data/wildfirepriority/&quot;))] |&gt; purrr::map(function(x){ readr::read_csv(paste0(&quot;../data/wildfirepriority/&quot;,x)) |&gt; dplyr::rename_with(tolower) |&gt; dplyr::rename_with(make.names) |&gt; dplyr::rename(feature_id = system.index) |&gt; dplyr::select(c( feature_id,projectid,region,state,name , tidyselect::ends_with(&quot;_m2&quot;) , tidyselect::starts_with(&quot;pct_&quot;) ) ) }) |&gt; dplyr::bind_rows() |&gt; dplyr::left_join( data.frame(state = datasets::state.name, state_abb = datasets::state.abb) , by = join_by(&quot;state&quot;) ) |&gt; dplyr::mutate( area_name = paste0( ifelse(is.na(state_abb) | state_abb == &quot;&quot;, &quot;UNK&quot;, state_abb) , &quot;: &quot; , name ) ) |&gt; dplyr::mutate(across( tidyselect::ends_with(&quot;_m2&quot;) , ~ as.numeric(.x) / 10000 )) |&gt; dplyr::rename_with( ~ gsub(&quot;_m2&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_m2&quot;) ) # aggregate data to region/forest level constrained_wide &lt;- constrained_wide_byftr |&gt; dplyr::group_by(projectid,region,state,name,area_name) |&gt; dplyr::summarise( dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , list(sum = ~ sum(.x, na.rm=T)) ) ) |&gt; dplyr::rename_with( ~ gsub(&quot;_ha_sum&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_ha_sum&quot;) ) |&gt; dplyr::ungroup() |&gt; dplyr::mutate(across( tidyselect::ends_with(&quot;_ha&quot;) &amp; tidyselect::starts_with(&quot;rmn&quot;) , ~ .x/covertype_area_ha , .names = &quot;pct_{.col}&quot; )) |&gt; dplyr::rename_with( ~ gsub(&quot;_area_ha&quot;, &quot;&quot;, .x) , tidyselect::starts_with(&quot;pct_&quot;) ) |&gt; # calculate pct reduction dplyr::mutate( pct_rdctn1_protected = -1*(1 - pct_rmn1_protected) , pct_rdctn2_slope = -1*(pct_rmn1_protected - pct_rmn2_slope) , pct_rdctn3_administrative = -1*(pct_rmn2_slope - pct_rmn3_administrative) , pct_rdctn4_riparian = -1*(pct_rmn3_administrative - pct_rmn4_riparian) , pct_rdctn5_roads = -1*(pct_rmn4_riparian - pct_rmn5_roads) , pct_rdctn_total = -1*(1 - pct_rmn5_roads) , pct_forested_area = covertype_area_ha/feature_area_ha ) 6.3 Reduction Treatable Area Table tbl_temp &lt;- constrained_wide |&gt; dplyr::mutate( dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , ~ scales::comma(.x, accuracy = 1) ) , dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ scales::percent(.x, accuracy = 0.1) ) ) |&gt; dplyr::select( state , name , covertype_area_ha , pct_forested_area , pct_rdctn1_protected , pct_rdctn2_slope , pct_rdctn3_administrative , pct_rdctn4_riparian , pct_rdctn5_roads , rmn5_roads_area_ha , pct_rmn5_roads ) |&gt; dplyr::arrange(state,name) # make table kableExtra::kable( tbl_temp |&gt; dplyr::select(-c(state)) , caption = &quot;Forested area of each Wildfire Crisis Strategy Priority Landscape&lt;br&gt;percent reduction of different types of constraints on mechanical treatment&quot; , col.names = c( &quot;&quot; , &quot;Forested (ha)&quot;, &quot;Forested %&quot; , &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; , &quot;Remaining (ha)&quot; , &quot;Remaining (%)&quot; ) ) |&gt; add_header_above(c(&quot; &quot; = 1, &quot;Area of\\nPriority Landscape&quot;=2, &quot;Constraint\\nLeast Flexible to Most Flexible&quot; = 5, &quot; &quot; = 2)) |&gt; kable_classic(&quot;striped&quot;, full_width=T) |&gt; pack_rows(index = table(forcats::fct_inorder(tbl_temp$state))) |&gt; kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) |&gt; kableExtra::scroll_box(width = &quot;740px&quot;) Table 6.1: Forested area of each Wildfire Crisis Strategy Priority Landscapepercent reduction of different types of constraints on mechanical treatment Area ofPriority Landscape ConstraintLeast Flexible to Most Flexible Forested (ha) Forested % Protected Slope&gt;35% Administrative Riparian Buffer (100ft) Roads&gt;2000ft Remaining (ha) Remaining (%) Arizona 4FRI 1,366,267 56.5% -11.9% -10.4% -31.3% -7.4% -6.2% 448,117 32.8% Prescott 86,905 34.3% -13.9% -30.9% -16.8% -10.6% -3.2% 21,251 24.5% San Carlos Apache Tribal Forest Protection 259,942 22.5% -10.0% -28.8% -2.6% -9.8% -32.4% 42,383 16.3% California North Yuba 125,905 87.3% -10.9% -40.4% -3.7% -14.2% -0.6% 37,960 30.2% Plumas Community Protection 87,033 80.5% 0.0% -32.0% -4.2% -24.3% -2.4% 32,246 37.1% Southern California Fireshed Risk Reduction Strategy 353,029 21.6% -56.7% -26.8% -2.7% -2.3% -1.2% 36,238 10.3% Stanislaus 94,078 76.4% -2.1% -33.4% -1.5% -26.8% -0.9% 33,123 35.2% Trinity Forest Health and Fire-Resilient Rural Communities 232,034 63.0% -11.2% -51.1% -18.8% -5.7% -0.7% 29,013 12.5% Colorado Colorado Front Range 776,083 53.6% -23.3% -26.2% -4.5% -12.4% -3.9% 230,472 29.7% Idaho Nez Perce-Clearwater-Lower Salmon 586,588 74.6% -41.6% -24.4% -0.4% -1.8% -2.7% 170,790 29.1% Southwest Idaho 418,545 60.3% -13.3% -36.8% -0.2% -2.0% -1.9% 191,705 45.8% Montana Kootenai Complex 315,091 77.4% -22.4% -20.9% -13.2% -6.0% -0.7% 116,079 36.8% Nevada Sierra and Elko Fronts 202,326 14.8% -52.7% -17.1% -2.1% -5.1% -5.3% 35,816 17.7% New Mexico Enchanted Circle 376,748 63.7% -10.8% -32.7% -2.7% -9.4% -14.1% 113,960 30.2% Oregon Central Oregon 537,703 50.9% -10.6% -4.7% -16.3% -3.5% -1.9% 338,286 62.9% Klamath River Basin 1,919,690 51.4% -20.5% -23.7% -8.4% -5.0% -2.4% 768,674 40.0% Mount Hood Forest Health and Fire-Resilient Communities 268,343 61.6% -22.9% -18.2% -25.1% -6.6% -2.8% 65,563 24.4% Utah Pine Valley 95,465 58.7% -47.9% -11.7% 0.0% -6.6% -6.7% 25,973 27.2% Wasatch 279,251 65.6% -49.5% -16.2% -0.4% -4.5% -4.1% 70,704 25.3% Washington Central Washington Initiative 434,014 44.1% -22.7% -37.9% -18.8% -5.7% -1.7% 57,654 13.3% Colville Northeast Washington Vision 548,285 77.5% -18.1% -25.6% -1.4% -12.9% -3.3% 211,681 38.6% 6.4 Forested Area Plot ggplot(data = constrained_wide, mapping = aes(x = pct_forested_area, y = reorder(area_name, -pct_forested_area), fill = state)) + geom_col(color = NA, width = 0.7) + geom_text( mapping = aes(label = scales::percent(pct_forested_area, accuracy = 1)) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + scale_fill_viridis_d(option = &quot;viridis&quot;, alpha = 0.8) + scale_x_continuous(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;% Priority Landscape Area Forested&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; # c(0.9, 0.9) , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) 6.5 Remaining Treatable Forest Plot ggplot(data = constrained_wide, mapping = aes(x = pct_rmn5_roads, y = reorder(area_name, -pct_rmn5_roads), fill = state)) + geom_col(color = NA, width = 0.7) + geom_text( mapping = aes(label = scales::percent(pct_rmn5_roads, accuracy = 1)) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + # facet_grid(rows = vars(state), scales = &quot;free_y&quot;, switch = &quot;y&quot;) + scale_fill_viridis_d(option = &quot;viridis&quot;, alpha = 0.8) + scale_x_continuous(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Treatable Forested Area Remaining (%)&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; # c(0.9, 0.9) , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) # , strip.background = element_blank() # , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) # , strip.placement = &quot;outside&quot; ) 6.6 Reduction by Constraint Plot # reshape constrained_pct_rdctn_long &lt;- constrained_wide |&gt; dplyr::select(state, name, area_name, tidyselect::starts_with(&quot;pct_rdctn&quot;)) |&gt; tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;pct_rdctn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;pct_rdctn&quot; , names_prefix = &quot;pct_rdctn&quot; , values_drop_na = F ) |&gt; tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) |&gt; dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , constraint = factor( constraint , ordered = TRUE , levels = c( &quot;protected&quot; , &quot;slope&quot; , &quot;administrative&quot; , &quot;riparian&quot; , &quot;roads&quot; , &quot;total&quot; ) , labels = c( &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; , &quot;Total&quot; ) ) |&gt; forcats::fct_rev() ) |&gt; dplyr::left_join( constrained_wide |&gt; dplyr::select(state,name,pct_rdctn_total) , by = join_by(state,name) ) # plot ggplot() + geom_col( data = constrained_pct_rdctn_long |&gt; dplyr::filter(constraint!=&quot;Total&quot;) , mapping = aes(y = reorder(area_name,-pct_rdctn_total), x = pct_rdctn, fill = constraint) , color = NA, width = 0.7 ) + geom_text( data = constrained_pct_rdctn_long |&gt; dplyr::filter(constraint==&quot;Total&quot;) , mapping = aes( y = reorder(area_name,-pct_rdctn_total), x = pct_rdctn_total , label = scales::percent(pct_rdctn_total, accuracy = 1) ) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + # facet_grid(rows = vars(state), scales = &quot;free_y&quot;, switch = &quot;y&quot;) + scale_fill_viridis_d(option = &quot;plasma&quot;, alpha = 0.8) + scale_x_reverse(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Forested Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) # , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) # , strip.placement = &quot;outside&quot; ) 6.7 Reduction Treatable Area Plot # reshape constrained_pct_rmn_long &lt;- constrained_wide |&gt; dplyr::mutate(pct_rmn_forested=1) |&gt; dplyr::select(state, name, area_name, tidyselect::starts_with(&quot;pct_rmn&quot;)) |&gt; tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;pct_rmn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;pct_rmn&quot; , names_prefix = &quot;pct_rmn&quot; , values_drop_na = F ) |&gt; tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) |&gt; dplyr::mutate( constraint = factor( constraint , ordered = TRUE , levels = c( &quot;forested&quot; , &quot;protected&quot; , &quot;slope&quot; , &quot;administrative&quot; , &quot;riparian&quot; , &quot;roads&quot; ) , labels = c( &quot;Forested&quot; , &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; ) ) ) |&gt; dplyr::arrange(state, name, constraint) # plot ggplot(data = constrained_pct_rmn_long , mapping = aes(x = constraint, y = pct_rmn, group = area_name) ) + geom_line(mapping=aes(color = area_name), linewidth = 1.5) + geom_label( mapping=aes(label = scales::percent(pct_rmn, scale = 100, accuracy = 1)) , color = &quot;black&quot; , size = 3 , label.padding = unit(0.15, &quot;lines&quot;) ) + facet_wrap(facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) ) + scale_color_viridis_d(option = &quot;turbo&quot;, alpha = 0.8) + scale_y_continuous(limits = c(-0.01,1.06), labels = scales::percent_format(), breaks = scales::extended_breaks(6)) + scale_x_discrete(labels = scales::label_wrap(20)) + labs( x = &quot;Constraint\\nLeast Flexible \\U2192 Most Flexible&quot; , y = &quot;Forested Area Remaining&quot; # , subtitle = rgn ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.text.x = element_text(angle=90,hjust=0.95,vjust=0.2) ) 6.8 Wildfire Crisis Strategy Priority Landscapes Subwatershed Level Sixth-level hydrologic units (HUs) enumerated with 12-digit codes, commonly referred to as subwatersheds, were used to characterize the spatial arrangement of constrained land. Subwatershed boundaries have been used to represent meaningful landscape management units and to approximate “firesheds” which are contiguous areas with similar fire history and problem fire characteristics where a coordinated suppression planning occurs. Subwatersheds that did not have at least 25% of area within the boundary of the area of interest were excluded from this analysis. This cutoff was implemented under the assumption that with less than 25% of area available, treatment alone would not substantially affect wildfire behavior across the subwatershed. 6.8.1 Load subwatershed-level data Data created via this Google Earth Engine script # data table # read multiple files constrained_byftr_huc12_wide &lt;- list.files(&quot;../data/wildfirepriority_subwatersheds/&quot;,pattern = &quot;\\\\.csv$&quot;) |&gt; purrr::map(function(x){ readr::read_csv( paste0(&quot;../data/wildfirepriority_subwatersheds/&quot;,x) , name_repair = &quot;universal&quot; , col_types = cols(.default = &quot;c&quot;) ) }) |&gt; dplyr::bind_rows() |&gt; dplyr::select(-dplyr::starts_with(&quot;shape&quot;, ignore.case = T)) |&gt; dplyr::rename(huc12name = name) |&gt; dplyr::rename_with(tolower) |&gt; dplyr::rename_with(make.names) |&gt; dplyr::rename(feature_id = system.index) |&gt; dplyr::left_join( data.frame(state = datasets::state.name, state_abb = datasets::state.abb) , by = join_by(&quot;state&quot;) ) |&gt; dplyr::mutate( area_name = paste0( ifelse(is.na(state_abb) | state_abb == &quot;&quot;, &quot;UNK&quot;, state_abb) , &quot;: &quot; , name ) , dplyr::across( tidyselect::ends_with(&quot;_m2&quot;) , ~ as.numeric(.x) / 10000 ) , dplyr::across( tidyselect::starts_with(&quot;pct_rmn&quot;) , ~ as.numeric(.x) ) ) |&gt; dplyr::rename_with( ~ gsub(&quot;_m2&quot;, &quot;_ha&quot;, .x) , tidyselect::ends_with(&quot;_m2&quot;) ) |&gt; # calculate pct reduction dplyr::mutate( pct_rdctn1_protected = -1*(1 - pct_rmn1_protected) , pct_rdctn2_slope = -1*(pct_rmn1_protected - pct_rmn2_slope) , pct_rdctn3_administrative = -1*(pct_rmn2_slope - pct_rmn3_administrative) , pct_rdctn4_riparian = -1*(pct_rmn3_administrative - pct_rmn4_riparian) , pct_rdctn5_roads = -1*(pct_rmn4_riparian - pct_rmn5_roads) , pct_rdctn_total = -1*(1 - pct_rmn5_roads) , cnstrnt_lvl = dplyr::case_when( -pct_rdctn_total &gt;= 0.85 ~ 1 , -pct_rdctn_total &gt;= 0.65 ~ 2 , -pct_rdctn_total &gt;= 0.0 ~ 3 ) ) |&gt; dplyr::mutate( cnstrnt_class = factor( cnstrnt_lvl , levels = 1:3 , labels = c(&quot;high constraint&quot;, &quot;med. constraint&quot;, &quot;low constraint&quot;) , ordered = T ) |&gt; forcats::fct_rev() , rmn_cnstrnt_class = factor( cnstrnt_lvl , levels = 1:3 , labels = c(&quot;0–15% treatable&quot;, &quot;16–35% treatable&quot;, &quot;&gt;35% treatable&quot;) , ordered = T ) |&gt; forcats::fct_rev() ) 6.8.2 Distribution of Subwatershed Area # plot ggplot(data = constrained_byftr_huc12_wide , mapping = aes(x = huc12_area_ha, y = area_name) ) + geom_vline(xintercept = median(constrained_byftr_huc12_wide$huc12_area_ha), linetype=&quot;dashed&quot;, color=&quot;gray66&quot;) + geom_violin(aes(fill = state)) + geom_boxplot(width = 0.15) + # geom_point(size = 0.7, color = &quot;gray33&quot;, alpha = 0.2) + geom_text( data = constrained_byftr_huc12_wide |&gt; dplyr::group_by(area_name) |&gt; dplyr::summarise(n=n(), max_area=max(huc12_area_ha)) , mapping = aes(x = -1,y=area_name,label=paste0(&quot;n=&quot;,scales::comma(n))) , size = 3 , color = &quot;black&quot; , hjust = 0.7 ) + scale_fill_viridis_d(option = &quot;viridis&quot;, alpha = 0.8) + scale_x_continuous(labels = scales::comma, breaks = scales::extended_breaks(n=7)) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Subwatershed Area (ha)&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; # c(0.9, 0.9) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) 6.8.3 Distribution of Subwatershed Constraint Based on model simulations of how much area generally needs to be treated to influence wildfire behavior, we binned the subwatersheds into three classes of mechanical constraint: high (85–100% [i.e., only 0–15% is available for mechanical treatment]): fuels treatment would principally need to rely on fire medium (65– 84%): could use a combination of fire and mechanical thinning low (65%): could effectively influence wildfire behavior with mechanical treatment alone constrained_byftr_huc12_wide |&gt; dplyr::count(area_name,cnstrnt_class) |&gt; dplyr::group_by(area_name) |&gt; dplyr::mutate( pct = n/sum(n) , high_pct=max(ifelse(cnstrnt_class==&quot;high constraint&quot;,pct,0)) ) |&gt; ggplot( mapping = aes(x = pct, y = reorder(area_name, high_pct), fill=cnstrnt_class) ) + geom_col(width = 0.7, alpha=0.8) + geom_text( mapping = aes( label = scales::percent(pct, accuracy = 1) ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 3 ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + # facet_grid(rows = vars(state), scales = &quot;free_y&quot;, switch = &quot;y&quot;) + scale_x_continuous(labels = scales::percent_format()) + labs( fill = &quot;Level of\\nConstraint&quot; , y = &quot;&quot; , x = &quot;Percent of Subwatersheds&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; # c(0.9, 0.9) , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) # , strip.background = element_blank() , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , strip.placement = &quot;outside&quot; ) # there seem to be a lot of low constraint class huc12s with no forest ;\\ constrained_byftr_cnstrcl_wide &lt;- constrained_byftr_huc12_wide |&gt; dplyr::group_by(area_name,cnstrnt_class,rmn_cnstrnt_class) |&gt; dplyr::summarise( n = n() , dplyr::across( c( huc12_area_ha , covertype_area_ha , pct_rdctn1_protected , pct_rdctn2_slope , pct_rdctn3_administrative , pct_rdctn4_riparian , pct_rdctn5_roads , rmn5_roads_area_ha , pct_rmn5_roads , pct_rdctn_total ) , ~ mean(as.numeric(.x), na.rm = T) ) ) |&gt; dplyr::group_by(area_name) |&gt; dplyr::mutate( pct_huc12s = n/sum(n) , pct_forested_area = covertype_area_ha/huc12_area_ha ) |&gt; dplyr::ungroup() |&gt; dplyr::relocate(c(pct_huc12s), .after=n) |&gt; dplyr::relocate(pct_forested_area, .after = covertype_area_ha) 6.8.4 Forested Area by Level of Constraint ggplot( data = constrained_byftr_cnstrcl_wide , mapping = aes(y = pct_forested_area, x = cnstrnt_class, fill=cnstrnt_class) ) + geom_col(width = 0.6, alpha=0.8) + geom_text( mapping = aes( label = scales::percent(pct_forested_area, accuracy = 1) ) , color = &quot;black&quot;, size = 3 , vjust = -0.5 ) + scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + facet_wrap( facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) ) + scale_y_continuous(labels = scales::percent_format(), expand = expansion(mult = c(0, .3))) + scale_x_discrete(labels = scales::label_wrap(10)) + labs( x = &quot;Level of\\nConstraint&quot; , y = &quot;% Subwatershed Area Forested&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.text.x = element_text(angle=90,hjust=0.95,vjust=0.2) ) 6.8.5 Constraint Reduction by Level of Constraint # reshape constrained_byftr_huc12_pct_rdctn_long &lt;- constrained_byftr_cnstrcl_wide |&gt; dplyr::select( area_name,cnstrnt_class,rmn_cnstrnt_class ,tidyselect::starts_with(&quot;pct_rdctn&quot;) ) |&gt; tidyr::pivot_longer( cols = tidyselect::starts_with(&quot;pct_rdctn&quot;) , names_to = &quot;constraint&quot; , values_to = &quot;pct_rdctn&quot; , names_prefix = &quot;pct_rdctn&quot; , values_drop_na = F ) |&gt; tidyr::separate_wider_delim(constraint, &quot;_&quot;, names = c(&quot;constraint_lvl&quot;, &quot;constraint&quot;)) |&gt; dplyr::mutate( constraint_lvl = as.numeric(constraint_lvl) , constraint = factor( constraint , ordered = TRUE , levels = c( &quot;protected&quot; , &quot;slope&quot; , &quot;administrative&quot; , &quot;riparian&quot; , &quot;roads&quot; , &quot;total&quot; ) , labels = c( &quot;Protected&quot; , &quot;Slope&gt;35%&quot; , &quot;Administrative&quot; , &quot;Riparian Buffer (100ft)&quot; , &quot;Roads&gt;2000ft&quot; , &quot;Total&quot; ) ) |&gt; forcats::fct_rev() ) # plot ggplot() + geom_col( data = constrained_byftr_huc12_pct_rdctn_long |&gt; dplyr::filter(constraint!=&quot;Total&quot;) , mapping = aes(y = cnstrnt_class, x = pct_rdctn, fill = constraint) , color = NA, width = 0.7 ) + geom_text( data = constrained_byftr_huc12_pct_rdctn_long |&gt; dplyr::filter(constraint==&quot;Total&quot;) , mapping = aes( y = cnstrnt_class, x = pct_rdctn , label = scales::percent(pct_rdctn, accuracy = 1) ) , color = &quot;black&quot;, size = 3 , hjust = -0.1 ) + facet_wrap( facets = vars(area_name) , ncol = 3 , labeller = label_wrap_gen(width = 35, multi_line = TRUE) ) + scale_fill_viridis_d(option = &quot;plasma&quot;, alpha = 0.8) + scale_x_reverse(expand = expansion(mult = c(0, .1)),labels = scales::percent_format()) + labs( fill = &quot;&quot; , y = &quot;&quot; , x = &quot;Constraint Reduction in Treatable Forested Area (%)&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.title = element_text(size=7) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) ) 6.8.6 Area Available for Mechanical Treatment area_table &lt;- constrained_wide |&gt; dplyr::left_join( constrained_byftr_huc12_wide |&gt; dplyr::group_by(area_name,cnstrnt_class) |&gt; dplyr::summarise( n = n() , dplyr::across( c(feature_area_ha,covertype_area_ha,rmn5_roads_area_ha) , ~ sum(.x,na.rm = T) ) ) |&gt; dplyr::mutate( cnstrnt_class = stringr::word(cnstrnt_class) |&gt; stringr::str_remove_all(&quot;\\\\.&quot;) ) |&gt; dplyr::rename( total_ha=feature_area_ha ,forested_ha=covertype_area_ha ,remaining_ha=rmn5_roads_area_ha ) |&gt; tidyr::pivot_wider( names_from = cnstrnt_class , values_from = c(tidyselect::ends_with(&quot;_ha&quot;),n) , names_glue = &quot;{cnstrnt_class}_{.value}&quot; , values_fill = 0 ) , by = dplyr::join_by(area_name) ) |&gt; dplyr::select(area_name, tidyselect::ends_with(&quot;_ha&quot;)) |&gt; dplyr::mutate( dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , ~ (.x*10000)/4046.85642 , .names = &quot;{.col}_acres&quot; ) ) |&gt; dplyr::rename_with( ~ gsub(&quot;_ha_acres&quot;, &quot;_acres&quot;, .x) , tidyselect::ends_with(&quot;_ha_acres&quot;) ) |&gt; dplyr::select( area_name , feature_area_ha, feature_area_acres , covertype_area_ha, covertype_area_acres , rmn5_roads_area_ha, rmn5_roads_area_acres , low_total_ha, low_total_acres , low_forested_ha, low_forested_acres , low_remaining_ha, low_remaining_acres ) # stack acres hectares area_table_temp &lt;- dplyr::bind_rows( area_table |&gt; dplyr::select(area_name, tidyselect::ends_with(&quot;_ha&quot;)) |&gt; dplyr::rename_with( ~ gsub(&quot;_ha&quot;, &quot;&quot;, .x) , tidyselect::ends_with(&quot;_ha&quot;) ) |&gt; dplyr::mutate(units = &quot;ha&quot;) , area_table |&gt; dplyr::select(area_name, tidyselect::ends_with(&quot;_acres&quot;)) |&gt; dplyr::rename_with( ~ gsub(&quot;_acres&quot;, &quot;&quot;, .x) , tidyselect::ends_with(&quot;_acres&quot;) ) |&gt; dplyr::mutate(units = &quot;ac&quot;) ) |&gt; dplyr::mutate( dplyr::across( -c(area_name,units) , ~ paste0(scales::comma(.x,accuracy=1),&quot; &quot;,units) ) ) |&gt; dplyr::arrange(area_name,desc(units)) |&gt; dplyr::mutate(units = &quot;&quot;) |&gt; dplyr::relocate(units,.after=&quot;area_name&quot;) by priority landscape # table kableExtra::kable( area_table_temp |&gt; dplyr::select(-c(area_name)) , caption = &quot;Wildfire Crisis Strategy Priority Landscape&lt;br&gt;area potentially available for mechanical treatment&quot; , col.names = c( &quot; &quot; , &quot;Total Area&quot; , &quot;Forested&quot; , &quot;Treatable Forest&quot; , &quot;Low Constraint HU Area&quot; , &quot;Low Constraint HU Forested&quot; , &quot;Low Constraint HU Treatable Forest&quot; ) ) |&gt; # add_header_above(c(&quot; &quot; = 1, &quot;Hectares&quot;=6)) |&gt; kable_classic(&quot;striped&quot;, full_width=T) |&gt; pack_rows(index = table(forcats::fct_inorder(area_table_temp$area_name))) |&gt; kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) |&gt; kableExtra::scroll_box(width = &quot;740px&quot;) Table 6.2: Wildfire Crisis Strategy Priority Landscapearea potentially available for mechanical treatment Total Area Forested Treatable Forest Low Constraint HU Area Low Constraint HU Forested Low Constraint HU Treatable Forest AZ: 4FRI 2,417,632 ha 1,366,267 ha 448,117 ha 1,328,654 ha 616,986 ha 365,685 ha 5,974,100 ac 3,376,119 ac 1,107,321 ac 3,283,175 ac 1,524,605 ac 903,627 ac AZ: Prescott 253,634 ha 86,905 ha 21,251 ha 114,864 ha 20,427 ha 9,258 ha 626,744 ac 214,746 ac 52,513 ac 283,835 ac 50,477 ac 22,878 ac AZ: San Carlos Apache Tribal Forest Protection 1,155,841 ha 259,942 ha 42,383 ha 62,446 ha 17,092 ha 6,524 ha 2,856,146 ac 642,331 ac 104,731 ac 154,307 ac 42,235 ac 16,120 ac CA: North Yuba 144,263 ha 125,905 ha 37,960 ha 63,473 ha 53,770 ha 22,737 ha 356,481 ac 311,117 ac 93,802 ac 156,845 ac 132,869 ac 56,185 ac CA: Plumas Community Protection 108,124 ha 87,033 ha 32,246 ha 66,226 ha 53,443 ha 22,587 ha 267,180 ac 215,064 ac 79,682 ac 163,647 ac 132,061 ac 55,814 ac CA: Southern California Fireshed Risk Reduction Strategy 1,636,901 ha 353,029 ha 36,238 ha 182,979 ha 23,817 ha 11,559 ha 4,044,869 ac 872,353 ac 89,546 ac 452,151 ac 58,853 ac 28,564 ac CA: Stanislaus 123,200 ha 94,078 ha 33,123 ha 76,226 ha 52,821 ha 24,293 ha 304,433 ac 232,472 ac 81,849 ac 188,358 ac 130,523 ac 60,028 ac CA: Trinity Forest Health and Fire-Resilient Rural Communities 368,145 ha 232,034 ha 29,013 ha 6,535 ha 3,760 ha 1,336 ha 909,707 ac 573,369 ac 71,692 ac 16,148 ac 9,291 ac 3,302 ac CO: Colorado Front Range 1,449,046 ha 776,083 ha 230,472 ha 637,755 ha 288,653 ha 142,195 ha 3,580,671 ac 1,917,744 ac 569,509 ac 1,575,926 ac 713,278 ac 351,370 ac ID: Nez Perce-Clearwater-Lower Salmon 786,619 ha 586,588 ha 170,790 ha 327,735 ha 255,891 ha 134,913 ha 1,943,779 ac 1,449,490 ac 422,032 ac 809,851 ac 632,320 ac 333,378 ac ID: Southwest Idaho 694,272 ha 418,545 ha 191,705 ha 552,216 ha 319,500 ha 173,818 ha 1,715,584 ac 1,034,246 ac 473,713 ac 1,364,555 ac 789,501 ac 429,515 ac MT: Kootenai Complex 407,243 ha 315,091 ha 116,079 ha 226,501 ha 157,315 ha 85,046 ha 1,006,319 ac 778,606 ac 286,837 ac 559,696 ac 388,734 ac 210,154 ac NM: Enchanted Circle 591,839 ha 376,748 ha 113,960 ha 196,707 ha 125,492 ha 60,281 ha 1,462,467 ac 930,964 ac 281,601 ac 486,074 ac 310,098 ac 148,957 ac NV: Sierra and Elko Fronts 1,371,150 ha 202,326 ha 35,816 ha 245,805 ha 21,601 ha 10,449 ha 3,388,185 ac 499,958 ac 88,503 ac 607,396 ac 53,376 ac 25,819 ac OR: Central Oregon 1,056,123 ha 537,703 ha 338,286 ha 933,656 ha 442,659 ha 332,659 ha 2,609,736 ac 1,328,694 ac 835,924 ac 2,307,115 ac 1,093,835 ac 822,019 ac OR: Klamath River Basin 3,734,755 ha 1,919,690 ha 768,674 ha 2,011,326 ha 910,453 ha 677,921 ha 9,228,781 ac 4,743,656 ac 1,899,436 ac 4,970,096 ac 2,249,778 ac 1,675,179 ac OR: Mount Hood Forest Health and Fire-Resilient Communities 435,854 ha 268,343 ha 65,563 ha 161,813 ha 89,982 ha 42,672 ha 1,077,019 ac 663,089 ac 162,009 ac 399,848 ac 222,351 ac 105,445 ac UT: Pine Valley 162,631 ha 95,465 ha 25,973 ha 49,802 ha 26,583 ha 12,156 ha 401,871 ac 235,898 ac 64,181 ac 123,064 ac 65,688 ac 30,038 ac UT: Wasatch 425,988 ha 279,251 ha 70,704 ha 169,470 ha 98,204 ha 48,653 ha 1,052,638 ac 690,043 ac 174,713 ac 418,768 ac 242,667 ac 120,225 ac WA: Central Washington Initiative 984,742 ha 434,014 ha 57,654 ha 99,931 ha 29,451 ha 14,178 ha 2,433,350 ac 1,072,471 ac 142,466 ac 246,935 ac 72,776 ac 35,034 ac WA: Colville Northeast Washington Vision 707,169 ha 548,285 ha 211,681 ha 628,783 ha 423,560 ha 207,147 ha 1,747,452 ac 1,354,841 ac 523,076 ac 1,553,757 ac 1,046,639 ac 511,872 ac Overall total_area_temp &lt;- dplyr::bind_rows( area_table |&gt; dplyr::select(tidyselect::ends_with(&quot;_ha&quot;)) |&gt; dplyr::rename_with( ~ gsub(&quot;_ha&quot;, &quot;&quot;, .x) , tidyselect::ends_with(&quot;_ha&quot;) ) |&gt; dplyr::mutate(units = &quot;ha&quot;) , area_table |&gt; dplyr::select(tidyselect::ends_with(&quot;_acres&quot;)) |&gt; dplyr::rename_with( ~ gsub(&quot;_acres&quot;, &quot;&quot;, .x) , tidyselect::ends_with(&quot;_acres&quot;) ) |&gt; dplyr::mutate(units = &quot;ac&quot;) ) |&gt; dplyr::group_by(units) |&gt; dplyr::summarise( dplyr::across( dplyr::everything() , sum ) ) |&gt; dplyr::mutate( dplyr::across( -c(units) , ~ paste0( scales::comma(.x,suffix = &quot;M&quot;, scale = 1e-6, accuracy = .01) ,&quot; &quot;,units) ) ) |&gt; dplyr::mutate(area_name = &quot;21 Wildfire Crisis Strategy Priority Landscapes&quot;) |&gt; dplyr::arrange(area_name,desc(units)) |&gt; dplyr::mutate(units = &quot;&quot;) |&gt; dplyr::relocate(c(area_name,units)) # table kableExtra::kable( total_area_temp |&gt; dplyr::select(-c(area_name)) , caption = &quot;Wildfire Crisis Strategy Priority Landscape&lt;br&gt;area potentially available for mechanical treatment&quot; , col.names = c( &quot; &quot; , &quot;Total Area&quot; , &quot;Forested&quot; , &quot;Treatable Forest&quot; , &quot;Low Constraint HU Area&quot; , &quot;Low Constraint HU Forested&quot; , &quot;Low Constraint HU Treatable Forest&quot; ) ) |&gt; # add_header_above(c(&quot; &quot; = 1, &quot;Hectares&quot;=6)) |&gt; kable_classic(&quot;striped&quot;, full_width=T) |&gt; pack_rows(index = table(forcats::fct_inorder(total_area_temp$area_name))) |&gt; kableExtra::kable_styling(font_size = 11,fixed_thead = TRUE) |&gt; kableExtra::scroll_box(width = &quot;740px&quot;) Table 6.3: Wildfire Crisis Strategy Priority Landscapearea potentially available for mechanical treatment Total Area Forested Treatable Forest Low Constraint HU Area Low Constraint HU Forested Low Constraint HU Treatable Forest 21 Wildfire Crisis Strategy Priority Landscapes 19.02M ha 9.36M ha 3.08M ha 8.14M ha 4.03M ha 2.41M ha 46.99M ac 23.14M ac 7.61M ac 20.12M ac 9.96M ac 5.95M ac 6.8.7 Map of Subwatersheds by Level of Constraint unique(constrained_byftr_huc12_wide$huc12)[1:10] ws_bounds &lt;- nhdplusTools::get_huc(id = unique(constrained_byftr_huc12_wide$huc12), type = &#39;huc12&#39;) # ws_bounds &lt;- nhdplusTools::get_huc(id = # constrained_byftr_huc12_wide |&gt; # dplyr::filter(name == &quot;4FRI&quot;) |&gt; # dplyr::pull(huc12) |&gt; # unique() # , type = &#39;huc12&#39; # ) # join constrained_byftr_huc12_wide_sf &lt;- constrained_byftr_huc12_wide |&gt; dplyr::inner_join( ws_bounds |&gt; dplyr::select(huc12, geometry) , by = dplyr::join_by(huc12) ) |&gt; sf::st_as_sf() |&gt; dplyr::mutate( dplyr::across( tidyselect::starts_with(&quot;pct_&quot;) , ~ scales::percent(as.numeric(.x), accuracy = 0.1) ) , dplyr::across( tidyselect::ends_with(&quot;_ha&quot;) , ~ scales::comma(as.numeric(.x), accuracy = 1) ) ) |&gt; dplyr::mutate( Priority.Area.Name = area_name , Level.of.Constraint = cnstrnt_class , Pct.Treatable.Class = rmn_cnstrnt_class , HUC12.Name = huc12name , HUC12.Area.Hectares = huc12_area_ha , Forested.Area.Hectares = covertype_area_ha , Pct.Rdctn.Protected = pct_rdctn1_protected , Pct.Rdctn.Slope = pct_rdctn2_slope , Pct.Rdctn.Administrative = pct_rdctn3_administrative , Pct.Rdctn.Riparian = pct_rdctn4_riparian , Pct.Rdctn.Roads = pct_rdctn5_roads , Treatable.Forested.Area.Hectares = rmn5_roads_area_ha , Pct.Treatable.Forested.Area = pct_rmn5_roads ) # mapview mapview::mapviewOptions(homebutton = FALSE, basemaps = c(&quot;OpenStreetMap&quot;)) mapview::mapview( constrained_byftr_huc12_wide_sf , zcol = &quot;cnstrnt_class&quot; , col.regions = RColorBrewer::brewer.pal(n=3,name=&quot;RdYlBu&quot;) |&gt; rev() , alpha.regions = 0.6 , lwd = 0.2 , label = FALSE , legend = FALSE , layer.name = &quot;Subwatershed Constraints&quot; , popup = leafpop::popupTable( constrained_byftr_huc12_wide_sf , zcol = c( &quot;Priority.Area.Name&quot; , &quot;Level.of.Constraint&quot; , &quot;Pct.Treatable.Class&quot; , &quot;HUC12.Name&quot; , &quot;HUC12.Area.Hectares&quot; , &quot;Forested.Area.Hectares&quot; , &quot;Pct.Rdctn.Protected&quot; , &quot;Pct.Rdctn.Slope&quot; , &quot;Pct.Rdctn.Administrative&quot; , &quot;Pct.Rdctn.Riparian&quot; , &quot;Pct.Rdctn.Roads&quot; , &quot;Treatable.Forested.Area.Hectares&quot; , &quot;Pct.Treatable.Forested.Area&quot; ) , row.numbers = FALSE , feature.id = FALSE ) ) 6.9 Example code to split larger polygons Split large polygons into equal area shapes for potential improvement of GEE processing # split polygons equal area fire_landscapes &lt;- sf::st_read(&quot;../data/Wildfire_Crisis_Strategy_Landscapes/Wildfire_Crisis_Strategy_Landscapes_(Feature_Layer).shp&quot;) |&gt; sf::st_make_valid() |&gt; dplyr::mutate(area_ha = as.numeric(sf::st_area(geometry))/10000) fire_landscapes |&gt; sf::st_drop_geometry() |&gt; dplyr::group_by(STATE) |&gt; dplyr::summarise(area_ha=sum(area_ha)) |&gt; dplyr::arrange(desc(area_ha)) # map mapview::mapview(fire_landscapes, zcol = &quot;NAME&quot;, legend = F) ## split poly # https://gis.stackexchange.com/questions/375345/dividing-polygon-into-parts-which-have-equal-area-using-r split_poly_fn &lt;- function(sf_poly, n_areas){ # create random points points_rnd &lt;- sf::st_sample(sf_poly, size = 10000) #k-means clustering points &lt;- do.call(rbind, sf::st_geometry(points_rnd)) |&gt; dplyr::as_tibble() |&gt; setNames(c(&quot;lon&quot;,&quot;lat&quot;)) k_means &lt;- kmeans(points, centers = n_areas) # create voronoi polygons voronoi_polys &lt;- dismo::voronoi(k_means$centers, ext = sf_poly |&gt; sf::as_Spatial()) # clip to sf_poly crs(voronoi_polys) &lt;- crs(sf_poly) voronoi_sf &lt;- sf::st_as_sf(voronoi_polys) equal_areas &lt;- sf::st_intersection(voronoi_sf, sf_poly) equal_areas$split_area_ha &lt;- as.numeric(sf::st_area(equal_areas))/10000 return(equal_areas) } # map function over all fire_landscapes_split &lt;- 1:nrow(fire_landscapes) |&gt; purrr::map(function(x){ sf_temp &lt;- fire_landscapes |&gt; dplyr::filter(dplyr::row_number()==x) |&gt; sf::st_geometry() n_areas_temp &lt;- ceiling( (fire_landscapes |&gt; dplyr::filter(dplyr::row_number()==x) |&gt; sf::st_drop_geometry() |&gt; dplyr::pull(area_ha) )/600000 ) # split split_temp &lt;- split_poly_fn(sf_poly = sf_temp, n_areas = max(2,n_areas_temp)) |&gt; dplyr::bind_cols( fire_landscapes |&gt; dplyr::filter(dplyr::row_number()==x) |&gt; sf::st_drop_geometry() ) return(split_temp) }) |&gt; dplyr::bind_rows() mapview::mapview(fire_landscapes_split, zcol = &quot;NAME&quot;, legend = F) sf::st_write(fire_landscapes_split , &quot;../data/Wildfire_Crisis_Strategy_Landscapes/Wildfire_Crisis_Strategy_Landscapes_split.shp&quot; , append = F ) sf::st_crs(fire_landscapes_split) fire_landscapes_split$split_area_ha |&gt; summary() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
